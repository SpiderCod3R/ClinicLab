-unless agenda.agenda_movimentacao.nil?
  .btn-group
    %button.btn.btn-default.btn-circle.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
      %i.glyphicon.glyphicon-chevron-up
    %ul.dropdown-menu.drop-up
      %li=link_to "Ficha do Paciente", new_ficha_cliente_path(agenda_id: agenda)
      %li.divider{:role => "separator"}
      -if @agenda_permissao.visualizar_atendimento?
        %li=link_to "Visualizar Atendimento", painel_empresa_agenda_path(current_usuario.empresa, agenda)
      -unless agenda.status.eql?(I18n.t("agendas.helpers.attended"))
        -if agenda.status.eql?(I18n.t("agendas.helpers.scheduled")) or agenda.status.eql?(I18n.t("agendas.helpers.free"))
          -if @agenda_permissao.realizar_atendimento?
            %li=link_to "Realizar Atendimento", painel_empresa_agenda_make_appointment_path(current_usuario.empresa, agenda), remote: true
          %li.divider{:role => "separator"}
          -if @agenda_permissao.trocar_horario?
            %li=link_to "Trocar Horário", painel_empresa_agenda_change_day_or_time_path(current_usuario.empresa, agenda), remote: true
          -if @agenda_permissao.limpar_horario?
            %li=link_to "Limpar Horário", painel_empresa_agenda_clean_path(current_usuario.empresa, agenda)
        -unless agenda.status.eql?(I18n.t("agendas.helpers.unmarked_by_doctor")) or agenda.status.eql?(I18n.t("agendas.helpers.unmarked_by_pacient")) or agenda.status.eql?(I18n.t("agendas.helpers.didnt_came"))
          -if @agenda_permissao.paciente_nao_veio?
            %li=link_to "Paciente não veio", painel_empresa_agenda_didnt_came_path(current_usuario.empresa, agenda), remote: true
          -if @agenda_permissao.remarcar_pelo_paciente?
            %li.divider{:role => "separator"}
            %li=link_to "Remarcar pelo Paciente", painel_empresa_agenda_remark_by_pacient_path(current_usuario.empresa, agenda), remote: true
          -if @agenda_permissao.remarcar_pelo_medico?
            %li=link_to "Remarcar pelo Médico", painel_empresa_agenda_remark_by_doctor_path(current_usuario.empresa, agenda), remote: true
        -if agenda.status.eql?(I18n.t("agendas.helpers.scheduled")) or agenda.status.eql?(I18n.t("agendas.helpers.free"))
          -if @agenda_permissao.desmarcar_pelo_paciente?
            %li.divider{:role => "separator"}
            %li=link_to "Desmarcar pelo Paciente", painel_empresa_agenda_unmarked_by_pacient_path(agenda.empresa, agenda)
          -if @agenda_permissao.desmarcar_pelo_medico?
            %li=link_to "Desmarcar pelo Médico", painel_empresa_agenda_unmarked_by_doctor_path(agenda.empresa, agenda)
  #change_agenda_section
-else
  .btn-group
    %button.btn.btn-default.btn-circle.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
      %i.glyphicon.glyphicon-chevron-up
    %ul.dropdown-menu.drop-up
      -if @agenda_permissao.agendar?
        %li=link_to "Agendar atendimento", painel_empresa_agenda_movimentar_ou_atualizar_path(@empresa,agenda.id), class: "hands_cursor"
      %li.divider{:role => "separator"}
      -if @agenda_permissao.excluir?
        %li=link_to "Excluir Agenda", painel_empresa_agenda_path(current_usuario.empresa, agenda), method: :delete, data: { confirm: "Deseja mesmo excluir a agenda #{agenda.referencia_agenda.descricao} no periodo de #{Time.parse(agenda.atendimento_inicio).strftime('%H:%M')}?" }

