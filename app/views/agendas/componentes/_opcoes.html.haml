-@sala_espera = SalaEspera.find_by(agenda_id: agenda.id)
-unless agenda.agenda_movimentacao.nil?
  .btn-group
    %button.btn.btn-default.btn-circle.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
      %i.glyphicon.glyphicon-chevron-up
    %ul.dropdown-menu.drop-down.pull-right
      %li=link_to "Ficha do Paciente", empresa_clinic_sheet_cliente_path(current_user.empresa, cliente_id: agenda.agenda_movimentacao.cliente_id, agenda_id: agenda.id, sala_espera_id: @sala_espera)
      -if !@sala_espera
        -if Time.now.strftime("%Y-%m-%d") == agenda.data.strftime("%Y-%m-%d")
          %li=link_to "Sala de Espera", new_empresa_agenda_sala_de_espera_path(current_user.empresa, agenda.id, cliente_id: agenda.agenda_movimentacao.cliente_id)
        - if agenda.agenda_movimentacao.movimento_servico.present?
          %li=link_to "Movimento de Serviço", edit_empresa_movimento_servico_path(current_user.empresa, agenda.agenda_movimentacao.movimento_servico.id)
        - else
          %li=link_to "Movimento de Serviço", new_empresa_movimento_servico_path(current_user.empresa, agenda_id: agenda.id, cliente_id: agenda.agenda_movimentacao.cliente_id)
        %li.divider{:role => "separator"}
        -unless agenda.status.eql?(I18n.t("agendas.helpers.attended"))
          -if agenda.status.eql?(I18n.t("agendas.helpers.scheduled")) or agenda.status.eql?(I18n.t("agendas.helpers.free"))
            %li=link_to "Trocar Horário", empresa_agenda_change_day_or_time_path(current_user.empresa, agenda), remote: true
            %li=link_to "Limpar Horário", empresa_agenda_clean_path(current_user.empresa, agenda)
          -unless agenda.status.eql?(I18n.t("agendas.helpers.unmarked_by_doctor")) or agenda.status.eql?(I18n.t("agendas.helpers.unmarked_by_pacient")) or agenda.status.eql?(I18n.t("agendas.helpers.didnt_came"))
            %li=link_to "Paciente não veio", empresa_agenda_didnt_came_path(current_user.empresa, agenda), remote: true
            %li.divider{:role => "separator"}
            %li=link_to "Remarcar pelo Paciente", empresa_agenda_remark_by_pacient_path(current_user.empresa, agenda), remote: true
            %li=link_to "Remarcar pelo Médico", empresa_agenda_remark_by_doctor_path(current_user.empresa, agenda), remote: true
          -if agenda.status.eql?(I18n.t("agendas.helpers.scheduled")) or agenda.status.eql?(I18n.t("agendas.helpers.free"))
            %li.divider{:role => "separator"}
            %li=link_to "Desmarcar pelo Paciente", empresa_agenda_unmarked_by_pacient_path(agenda.empresa, agenda)
            %li=link_to "Desmarcar pelo Médico", empresa_agenda_unmarked_by_doctor_path(agenda.empresa, agenda)
  #change_agenda_section
-else
  .btn-group
    %button.btn.btn-default.btn-circle.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
      %i.glyphicon.glyphicon-chevron-up
    %ul.dropdown-menu.drop-down.pull-right
      %li=link_to "Agendar atendimento", empresa_agenda_movimentar_ou_atualizar_path(current_user.empresa,agenda), class: "hands_cursor"
      %li.divider{:role => "separator"}
      %li=link_to "Excluir Agenda", empresa_agenda_path(current_user.empresa, agenda), method: :delete, data: { confirm: "Deseja mesmo excluir a agenda #{agenda.referencia_agenda.descricao} no periodo de #{Time.parse(agenda.atendimento_inicio).strftime('%H:%M')}?" }
